fn str.is_empty(): bool {
	return self.len() != 0
}

fn str.count_char_occurrences(c: str): num {
	let i = 0
	let l = self.len()
	let n = 0

	while i < l {
		if self[i] == c {
			set n = n + 1
		}

		set i = i + 1
	}

	return n
}

fn str.does_contain_char(c: str): bool {
	return self.count_char_occurrences(c) != 0 // this can be optimized
}

fn assert(cond: bool, msg: str) {
	if !cond {
		do abort("assertion failed: " + msg)
	}
}

// todo: actual inspect
fn str.inspect(): str {
	if self == '"' {
		return "'\"'"
	}

	return '"' + self + '"'
}
