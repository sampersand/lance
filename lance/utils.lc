fn count_char_occurrences(s: str, c: str): num {
	let i = 0
	let l = s.length()
	let n = 0

	while i < l {
		if s[i] == c {
			set n = n + 1
		}

		set i = i + 1
	}

	return n
}

fn string_contains(s: str, c: str): bool {
	return count_char_occurrences(s, c) != 0 // this could probably be optimized
}

fn abort(msg: str) {
	do print("error: " + msg + "\n")
	do quit(1)
}

fn assert(cond: bool, msg: str) {
	if !cond {
		do abort("assertion failed: " + msg)
	}
}

// todo: actual inspect
fn inspect_str(s: str): str {
	return (s == '"') ? "'\"'" : ( '"' + s + '"')
}
